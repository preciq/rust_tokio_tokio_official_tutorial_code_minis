So what exactly is a rust executor? 
It was mentioned briefly in 10_3 (the thing that decides what to run in Rust)
How does this thing work exactly?

Recall that running async functions requires either calling them inside a tokio::spawn OR inside an async main function. This passes the function on to the executor, which then decides when to execute the function.
How does it determine when something asynchronous should be run? Simple: it calls the poll() function on the future (which as we know is present in all futures as part of their definition)
    It is the executor that analyzes the variant of the Poll enum that is returned
        A Poll::Ready signals the executor to immediately execute the async function, which is now ready (Food is done, time to serve it!)
        A Poll::Pending signals the executor to try and execute something else, because the current async function is not yet ready
            Thus, concurrency is achieved
            Like checking on if one oven is done cooking; if it is not, leave it FOR NOW and check another oven
            
